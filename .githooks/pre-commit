#!/bin/bash
# Git pre-commit hook for Go projects
# This runs formatting checks, linting, and tests before allowing a commit

set -e

echo "Running pre-commit checks..."

# Color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Check if go is installed
if ! command -v go &> /dev/null; then
    echo -e "${RED}Error: Go is not installed${NC}"
    exit 1
fi

# 1. Format check
echo -e "\n${YELLOW}1. Checking code formatting...${NC}"
UNFORMATTED=$(gofmt -l .)
if [ -n "$UNFORMATTED" ]; then
    echo -e "${RED}The following files are not formatted:${NC}"
    echo "$UNFORMATTED"
    echo -e "${YELLOW}Run 'go fmt ./...' to fix${NC}"
    exit 1
fi
echo -e "${GREEN}✓ Code formatting OK${NC}"

# 2. Go vet
echo -e "\n${YELLOW}2. Running go vet...${NC}"
if ! go vet ./...; then
    echo -e "${RED}go vet failed${NC}"
    exit 1
fi
echo -e "${GREEN}✓ Go vet passed${NC}"

# 3. Go mod tidy check
echo -e "\n${YELLOW}3. Checking go.mod and go.sum...${NC}"
go mod tidy
if ! git diff --exit-code go.mod go.sum; then
    echo -e "${RED}go.mod or go.sum needs tidying${NC}"
    echo -e "${YELLOW}Changes have been made. Please review and commit them.${NC}"
    exit 1
fi
echo -e "${GREEN}✓ Go modules are tidy${NC}"

# 4. Run tests
echo -e "\n${YELLOW}4. Running tests...${NC}"
if ! go test -race -short ./...; then
    echo -e "${RED}Tests failed${NC}"
    exit 1
fi
echo -e "${GREEN}✓ All tests passed${NC}"

# 5. Lint (optional - only if golangci-lint is installed)
if command -v golangci-lint &> /dev/null; then
    echo -e "\n${YELLOW}5. Running golangci-lint...${NC}"
    if ! golangci-lint run --timeout=3m; then
        echo -e "${RED}Linting failed${NC}"
        exit 1
    fi
    echo -e "${GREEN}✓ Linting passed${NC}"
else
    echo -e "\n${YELLOW}5. Skipping golangci-lint (not installed)${NC}"
    echo -e "${YELLOW}   Install with: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest${NC}"
fi

echo -e "\n${GREEN}All pre-commit checks passed! ✓${NC}"

