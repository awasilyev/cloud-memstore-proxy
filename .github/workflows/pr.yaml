name: Pull Request

on:
  pull_request:
    types: [opened, synchronize, reopened]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25'

      - name: golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: v2.5.0
          args: --timeout=5m

  validate:
    name: Validate PR
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: '1.25'

      - name: Check formatting
        run: |
          if [ -n "$(gofmt -l .)" ]; then
            echo "Go code is not formatted:"
            gofmt -d .
            exit 1
          fi

      - name: Run tests
        run: go test -v -race -coverprofile=coverage.txt ./...

      - name: Check build
        run: |
          CGO_ENABLED=0 go build -o cloud-memstore-proxy main.go
          ./cloud-memstore-proxy -h || true

      - name: Verify Docker build
        run: docker build -t test .

  docker:
    name: Build and Push Docker (for testing)
    runs-on: ubuntu-latest
    needs: [lint, validate]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image (PR test)
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:pr-${{ github.event.pull_request.number }}
            ghcr.io/${{ github.repository }}:pr-${{ github.event.pull_request.number }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          
      - name: Comment PR with image tags
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'üê≥ Docker image built and pushed!\n\n' +
                    '**Pull with:**\n' +
                    '```bash\n' +
                    'docker pull ghcr.io/${{ github.repository }}:pr-${{ github.event.pull_request.number }}\n' +
                    '# Or specific commit:\n' +
                    'docker pull ghcr.io/${{ github.repository }}:pr-${{ github.event.pull_request.number }}-${{ github.sha }}\n' +
                    '```\n\n' +
                    '**Test on Cloud Run:**\n' +
                    '```bash\n' +
                    'gcloud run services update SERVICE_NAME \\\n' +
                    '  --image=ghcr.io/${{ github.repository }}:pr-${{ github.event.pull_request.number }} \\\n' +
                    '  --region=REGION\n' +
                    '```'
            })

